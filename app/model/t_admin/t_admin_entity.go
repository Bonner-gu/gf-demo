// ==========================================================================
// This is auto-generated by gf cli tool. You may not really want to edit it.
// ==========================================================================

package t_admin

import (
	"database/sql"
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/os/gtime"
)

// Entity is the golang structure for table t_admin.
type Entity struct {
    Id         int64       `orm:"id,primary"    json:"id"`          //                                   
    Aid        int64       `orm:"aid,primary"   json:"aid"`         // 管理员唯一标识                    
    Name       string      `orm:"name"          json:"name"`        // admin昵称                         
    Phone      string      `orm:"phone,primary" json:"phone"`       // admin手机号码（账号）             
    Logo       string      `orm:"logo"          json:"logo"`        // admin头像                         
    Sign       string      `orm:"sign"          json:"sign"`        // 个性签名                          
    Pw         string      `orm:"pw"            json:"pw"`          // 密码                              
    Salt       string      `orm:"salt"          json:"salt"`        // 动态盐                            
    Status     int         `orm:"status"        json:"status"`      // admin状态（默认0，1在职，2离职）  
    RegisterIp string      `orm:"register_ip"   json:"register_ip"` //                                   
    CreateTime *gtime.Time `orm:"create_time"   json:"create_time"` //                                   
    ModifyTime *gtime.Time `orm:"modify_time"   json:"modify_time"` //                                   
}

// OmitEmpty sets OPTION_OMITEMPTY option for the model, which automatically filers
// the data and where attributes for empty values.
func (r *Entity) OmitEmpty() *arModel {
	return Model.Data(r).OmitEmpty()
}

// Inserts does "INSERT...INTO..." statement for inserting current object into table.
func (r *Entity) Insert() (result sql.Result, err error) {
	return Model.Data(r).Insert()
}

// InsertIgnore does "INSERT IGNORE INTO ..." statement for inserting current object into table.
func (r *Entity) InsertIgnore() (result sql.Result, err error) {
	return Model.Data(r).InsertIgnore()
}

// Replace does "REPLACE...INTO..." statement for inserting current object into table.
// If there's already another same record in the table (it checks using primary key or unique index),
// it deletes it and insert this one.
func (r *Entity) Replace() (result sql.Result, err error) {
	return Model.Data(r).Replace()
}

// Save does "INSERT...INTO..." statement for inserting/updating current object into table.
// It updates the record if there's already another same record in the table
// (it checks using primary key or unique index).
func (r *Entity) Save() (result sql.Result, err error) {
	return Model.Data(r).Save()
}

// Update does "UPDATE...WHERE..." statement for updating current object from table.
// It updates the record if there's already another same record in the table
// (it checks using primary key or unique index).
func (r *Entity) Update() (result sql.Result, err error) {
	return Model.Data(r).Where(gdb.GetWhereConditionOfStruct(r)).Update()
}

// Delete does "DELETE FROM...WHERE..." statement for deleting current object from table.
func (r *Entity) Delete() (result sql.Result, err error) {
	return Model.Where(gdb.GetWhereConditionOfStruct(r)).Delete()
}